# VNC Cloudflared Docker Client - Environment Configuration
# Copyright (c) 2025 VNC Cloudflared Docker Contributors
# 
# Copy this file to .env and configure with your settings
# For profile-specific configs, create .env.<profile> (e.g., .env.production)

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# Cloudflare tunnel hostname for your VNC server
# This should be the hostname configured in your Cloudflare tunnel
VNC_HOSTNAME=vnc.example.com

# ============================================================================
# CONNECTION SETTINGS
# ============================================================================

# Local port where VNC will be accessible (default: 5902)
# Change this if port 5902 is already in use
VNC_LOCAL_PORT=5902

# Metrics port for Cloudflared statistics (localhost only)
# Set to 0 to disable metrics
METRICS_PORT=2000

# ============================================================================
# TUNNEL CONFIGURATION
# ============================================================================

# Cloudflared log level: trace, debug, info, warn, error, fatal
TUNNEL_LOGLEVEL=info

# Transport log level (for connection debugging)
TUNNEL_TRANSPORT_LOGLEVEL=warn

# Tunnel retry attempts on failure
TUNNEL_RETRIES=5

# Grace period for tunnel shutdown
TUNNEL_GRACE_PERIOD=30s

# Metrics endpoint (set to empty to disable)
TUNNEL_METRICS=0.0.0.0:2000

# ============================================================================
# CONTAINER SETTINGS
# ============================================================================

# Timezone for container (e.g., UTC, America/New_York, Europe/London)
# See: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TZ=UTC

# Docker Compose project name (useful for multiple instances)
COMPOSE_PROJECT_NAME=vnc-tunnel

# ============================================================================
# RESOURCE LIMITS
# ============================================================================

# CPU limits (1.0 = 1 full CPU core)
CONTAINER_CPU_LIMIT=0.5
CONTAINER_CPU_RESERVATION=0.1

# Memory limits (examples: 256M, 1G)
CONTAINER_MEMORY_LIMIT=256M
CONTAINER_MEMORY_RESERVATION=128M

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Maximum size of log files
LOG_MAX_SIZE=10m

# Maximum number of log files to keep
LOG_MAX_FILES=3

# ============================================================================
# HEALTH CHECK SETTINGS
# ============================================================================

# Health check interval
HEALTHCHECK_INTERVAL=30s

# Health check timeout
HEALTHCHECK_TIMEOUT=10s

# Number of retries before marking unhealthy
HEALTHCHECK_RETRIES=3

# Initial delay before starting health checks
HEALTHCHECK_START_PERIOD=10s

# ============================================================================
# RESTART POLICY
# ============================================================================

# Delay between restart attempts
RESTART_DELAY=5s

# Maximum number of restart attempts
RESTART_MAX_ATTEMPTS=3

# Time window for restart attempts
RESTART_WINDOW=120s

# ============================================================================
# NETWORK CONFIGURATION
# ============================================================================

# Custom subnet for Docker network (advanced users only)
# Default: 172.20.0.0/16
NETWORK_SUBNET=172.20.0.0/16

# ============================================================================
# SECURITY OPTIONS (Advanced)
# ============================================================================

# Additional security options can be configured in docker-compose.override.yml
# Examples:
# - Custom AppArmor profiles
# - SELinux contexts
# - Seccomp profiles

# ============================================================================
# NOTES
# ============================================================================
# 
# 1. Environment variables can be overridden at runtime:
#    VNC_HOSTNAME=custom.example.com ./vnc-client.sh start
#
# 2. Profile-specific configurations:
#    Create .env.production, .env.development, etc.
#    Use: ./vnc-client.sh start production
#
# 3. For sensitive data, consider using Docker secrets in production
#
# 4. Some VNC servers may require specific ports or protocols
#    Adjust the configuration accordingly
#